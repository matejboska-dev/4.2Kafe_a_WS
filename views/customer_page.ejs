<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hlavní Stránka</title>
    <link rel="stylesheet" href="styles/styles.css">
    <style>
        .section {
            display: none;
        }

        .active {
            display: block;
            text-align: center; /* Centering text in active sections */
        }

        .button-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
        }

        .toggle-button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border: none;
            background-color: #555;
            color: #fff;
            border-radius: 5px;
        }

        .toggle-button.active {
            background-color: #007bff;
        }

        .slider-section {
            text-align: center; /* Centering labels and sliders */
        }

        .submit-button {
            display: inline-block;
            margin-top: 15px; /* Adding space above the button */
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border: none;
            background-color: #555;
            color: #fff;
            border-radius: 5px;
        }

        /* Specific styles for terminal */
        #console-body p {
            text-align: left; /* Ensures terminal paragraphs are left-aligned */
            margin: 0; /* Optional: Remove default margin */
        }

        .toggle-button img {
            max-width: 30px; /* Set maximum width */
            max-height: 30px; /* Set maximum height */
            width: auto; /* Maintain aspect ratio */
            height: auto; /* Maintain aspect ratio */
            display: block; /* Center images if needed */
            margin: auto; /* Center images within the button */
        }

    </style>
</head>
<body>

<div class="button-container">
    <button class="toggle-button" onclick="showSection('objednavka')">
        <img src="img/kafeimg.png" alt="Objednavka"/>
    </button>
    <button class="toggle-button" onclick="showSection('hlaseni')">
        <img src="img/problemICON.png" alt="Hlaseni Problemu"/>
    </button>
    <button class="toggle-button" onclick="showSection('terminal')">
        <img src="img/terminalICON.png" alt="Terminal"/>
    </button>
</div>

<h1 style="text-align: center" id="customer-header">Uživatel </h1>
<!-- Objednavka Section -->
<div id="objednavka" class="section active">
    <h1>Objednávky</h1>

    <div class="form-container">

        <div id="coffee-form">

            <div id="drink-list-container" class="list-container"></div>

            <button class="submit-button" onclick="sendDrinks()">Odeslat</button>
        </div>
    </div>

</div>


<!-- Hlaseni Problemu Section -->
<div id="hlaseni" class="section">
    <h2>Výběr problému</h2>
    <br>
    <select id="problem-dropdown">
        <option value="">Vyberte problém</option>
        <option value="Došlo mléko">Došlo mléko</option>
        <option value="Došlo espresso">Došlo espresso</option>
        <option value="Došlo coffee">Došlo coffee</option>
        <option value="Došel long">Došel long</option>
        <option value="Došlo doppio+">Došlo doppio+</option>
        <option value="Vyčistit kávovar">Vyčistit kávovar</option>
    </select>
    <br><br>
    <button id="add-problem-button" class="button">Odeslat</button>
    <br><br>
    <h2>Seznam problémů</h2>
    <div id="problem-list"></div>
</div>

<!-- Terminal Section -->
<div id="terminal" class="section">
    <div class="body-console">
        <div class="console">
            <header class="console-header">
                <p>Terminál</p>
            </header>
            <div id="console-body">
                <p>> Objednávky:</p>
                <p></p>
                <p>-------------</p>
                <p>> Nově připojeni:</p>
                <p>> </p>
            </div>
        </div>
    </div>
</div>

<img src="img/qr.png" alt="QR"  name = "kafeim" id="kafeimg" width="100px" height="100px">
<script src="app.js"></script>

<script>
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);

        console.log(value);

        if (parts.length === 2) return parts.pop().split(';').shift();
    }


    months =
        [
            "leden",
            "únor",
            "březen",
            "duben", "květěn",
            "červen",
            "červenec", "srpen", "září",
            "říjen",
            "listopad",
            "prosinec"

        ]

    const currentDate = new Date();
    const currentMonth = months[currentDate.getMonth()];
    const currentYear = currentDate.getFullYear();


    const xhttp = new XMLHttpRequest();

    xhttp.onload = function () {
        const list = document.getElementById("drink-list-container");


        let drinks = JSON.parse(this.responseText);

        for (drink of drinks) {
            list.innerHTML += `
                <div class="slider-container">
                    <label class="slider-label" for="${drink.id}">${drink.name}</label>
                    <div class="break"></div>
                    <input class="drink-slider" type="range" name="${drink.id}" min="0" max="10" value="0">
                    <span class="slider-value" >0</span>
                </div>`
        }

        document.querySelectorAll(".drink-slider").forEach(slider => {
            const valueDisplay = slider.nextElementSibling; // Select the <span> element next to the slider
            slider.addEventListener("input", () => {
                valueDisplay.textContent = slider.value; // Update the <span> with slider's current value
            });
        });


    }
    xhttp.open("GET", "http://s-jonas-24.dev.spsejecna.net/getAllDrinks", true);
    xhttp.send();


    const addProblemButton = document.getElementById("add-problem-button");
    const problemDropdown = document.getElementById("problem-dropdown");
    const problemList = document.getElementById("problem-list");


    let username = getCookie("username");

    let customer_id = getCookie("customer_id");


    document.getElementById("customer-header").innerHTML += username;

    const ws = new WebSocket('ws://s-jonas-24.dev.spsejecna.net');

    let connId;

    ws.onopen = () => {
        console.log('Connected to the WebSocket server');
    };


    addProblemButton.onclick = (x) => {
        const selectedProblem = problemDropdown.value;
        //alert(problemDropdown.value);


        if (selectedProblem) {
            const ws_data = {
                section: "task", customer_id: customer_id, data:
                    {
                        action: "register",
                        task_type_id: selectedProblem
                    }
            }

            ws.send(JSON.stringify({ws_data}));
        } else {
            alert("Please select a problem to add.");
        }
    };

    ws.onmessage = (event) => {
        const data = JSON.parse(event.data);
        if (data.type === 'init') {
            connId = data.connId;
            return;
        }


        let console_body = document.getElementById("console-body");
        let problem_dropdown = document.getElementById("problem-dropdown");
        let problem_list = document.getElementById("problem-list");


        console_body.innerHTML = "";
        console_body.innerHTML += `<p>UZIVATELSKE UDAJE: ${currentMonth} ${currentYear} </p>`;
        console_body.innerHTML += `<p>-----</p>`

        if(data.type === "error")
        {
            console_body.innerHTML += `<p>${data.message}/p>`
            return;
        }


        data.terminal.drink_data.forEach(x => {

            console_body.innerHTML += `<p>${x.username}:</p>`
            x.data.forEach(y => {

                console_body.innerHTML += `<p>     -${y.drink_name + " x" + y.amount}</p>`

            })
            console_body.innerHTML += `<p>-----</p>`
        })
        console_body.innerHTML += "<p>NOVE PRIPOJENI</p>";
        console_body.innerHTML += "<p>-----</p>";

        data.terminal.joined.forEach(x => {
            console_body.innerHTML += `<p>${x}</p>`
        })

        let tmpval = problem_dropdown.value;
        problem_dropdown.innerHTML = "";


        problem_list.innerHTML = "";

        data.tasks.unregistered.forEach(x => {
            problem_dropdown.innerHTML += `<option value="${x.task_id}">${x.task_text}</option>`
        });

        problem_dropdown.value = tmpval;
        //
        // data.tasks.registered.sort((a, b) => (a.customer_id === customer_id) ? 1 : -1);

        data.tasks.registered.filter(x => x.username === username).forEach(x => {
            problem_list.innerHTML += `<div class="problem-item problem-item-customer" id="td${x.task_id}">${x.task_text}<br>${x.username}</div>`
        })

        data.tasks.registered.filter(x => x.username !== username).forEach(x => {
            let taken = x.username != null;

            problem_list.innerHTML += `<div class="problem-item ${taken ? "problem-item-taken" : "problem-item-untaken"}" id="td${x.task_id}">${x.task_text}<br>${taken ? x.username : ""}</div>`
        })


        document.querySelectorAll(".problem-item-untaken").forEach(x => {
            x.onclick = (y) => {

                const ws_data = {
                    section: "task", customer_id: customer_id, data:
                        {
                            action: "take",
                            task_type_id: x.id.split("td")[1]
                        }
                }


                ws.send(JSON.stringify({ws_data}));
                //alert(x.id.split("td")[1])
            };
        });

        document.querySelectorAll(".problem-item-customer").forEach(x => {
            x.onclick = (y) => {

                const ws_data = {
                    section: "task", customer_id: customer_id, data:
                        {
                            action: "complete",
                            task_type_id: x.id.split("td")[1]
                        }
                }


                ws.send(JSON.stringify({ws_data}));
                //alert(x.id.split("td")[1])
            };
        })

    };


    function sendDrinks() {

        const ws_data = {};
        ws_data.section = "order";
        ws_data.customer_id = customer_id;
        ws_data.data = {drinks: []}

        document.querySelectorAll(".drink-slider").forEach(slider => {

            ws_data.data.drinks.push({drink_id: slider.name, amount: slider.value});
        });

        const obj = {name: "John", age: 30, city: "New York"};
        console.log(JSON.stringify({ws_data}));

        ws.send(JSON.stringify({ws_data}));
    }


</script>
</body>
</html>
